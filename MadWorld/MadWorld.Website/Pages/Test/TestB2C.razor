@page "/testB2C"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MadWorld.Website.Types;
@inject IHttpClientFactory clientFactory
@attribute [Authorize]

<h1>Counter</h1>

<p>@MessageB2C</p>

<p>@MessageAnonymous</p>

@code {
    private string MessageB2C = string.Empty;
    private string MessageAnonymous = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var Http = clientFactory.CreateClient(ApiTypes.MadWorldApiB2C);
            MessageB2C = await Http.GetStringAsync("GetMessageB2C?name=B2C");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

        try
        {
            var Http = clientFactory.CreateClient(ApiTypes.MadWorldApiAnonymous);
            MessageAnonymous = await Http.GetStringAsync("GetHomeMessage?name=Anonymous");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}


