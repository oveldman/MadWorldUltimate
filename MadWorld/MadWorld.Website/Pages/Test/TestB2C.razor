@page "/testB2C"

@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using MadWorld.Shared.Models.API.Account;
@using MadWorld.Shared.Enums;
@using MadWorld.Website.Types;
@inject IHttpClientFactory clientFactory
@attribute [Authorize(Roles = nameof(RoleTypes.Adminstrator))]

<h1>Test Page for B2C</h1>


<p>@nameof(RoleTypes.Adminstrator)</p>

<p>@string.Join(";", MessageB2C.Roles)</p>

@code {
    private ResponseRoles MessageB2C = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var Http = clientFactory.CreateClient(ApiTypes.MadWorldApiB2C);
            MessageB2C = await Http.GetFromJsonAsync<ResponseRoles>("GetCurrentUserRoles") ?? new ResponseRoles();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}


